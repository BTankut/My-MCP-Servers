{
  "version": "1.0.0",
  "description": "MCP Server Registry - Centralized server configuration management",
  "servers": {
    "github": {
      "name": "GitHub MCP Server",
      "description": "GitHub API integration for repository management",
      "install_command": {
        "npm": "npx -y @modelcontextprotocol/server-github",
        "type": "npx"
      },
      "config_template": {
        "command": "npx",
        "args": ["@modelcontextprotocol/server-github"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "development",
      "official": true,
      "requires_api_key": true,
      "api_key_config": {
        "env_vars": [
          {
            "name": "GITHUB_PERSONAL_ACCESS_TOKEN",
            "description": "GitHub Personal Access Token for API access",
            "required": true,
            "setup_url": "https://github.com/settings/tokens"
          }
        ],
        "instructions": "Create a Personal Access Token at GitHub Settings → Developer settings → Personal access tokens → Tokens (classic). Select scopes: 'repo', 'user', 'gist' for full functionality."
      }
    },
    "huggingface": {
      "name": "Hugging Face MCP Server",
      "description": "Hugging Face model and dataset access",
      "install_command": {
        "npm": "npx @modelcontextprotocol/server-huggingface",
        "type": "npx"
      },
      "config_template": {
        "command": "npx",
        "args": ["@modelcontextprotocol/server-huggingface"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "ai-ml",
      "official": true,
      "requires_api_key": true,
      "api_key_config": {
        "env_vars": [
          {
            "name": "HUGGINGFACE_API_TOKEN",
            "description": "Hugging Face API Token for model access",
            "required": false,
            "setup_url": "https://huggingface.co/settings/tokens"
          }
        ],
        "instructions": "Create an API token at Hugging Face → Settings → Access Tokens. This is optional but recommended for full functionality."
      }
    },
    "sequential-thinking": {
      "name": "Sequential Thinking MCP Server",
      "description": "Sequential thinking and reasoning capabilities",
      "install_command": {
        "npm": "npx @modelcontextprotocol/server-sequential-thinking",
        "type": "npx"
      },
      "config_template": {
        "command": "npx",
        "args": ["@modelcontextprotocol/server-sequential-thinking"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "reasoning",
      "official": true
    },
    "puppeteer": {
      "name": "Puppeteer MCP Server",
      "description": "Browser automation and web scraping",
      "install_command": {
        "npm": "npx @modelcontextprotocol/server-puppeteer",
        "type": "npx"
      },
      "config_template": {
        "command": "npx",
        "args": ["@modelcontextprotocol/server-puppeteer"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "web",
      "official": true
    },
    "magic": {
      "name": "21st Magic MCP Server",
      "description": "UI component generation and magic tools",
      "install_command": {
        "npm": "npx @21st-dev/magic@latest",
        "type": "npx"
      },
      "config_template": {
        "command": "npx",
        "args": ["@21st-dev/magic@latest"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "ui-development",
      "official": false
    },
    "context7": {
      "name": "Context7 MCP Server",
      "description": "Context-aware documentation and library assistance",
      "install_command": {
        "url": "https://mcp.context7.com/mcp",
        "type": "http"
      },
      "config_template": {
        "url": "https://mcp.context7.com/mcp",
        "transport": "http"
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "documentation",
      "official": false,
      "requires_api_key": false
    },
    "desktop-commander": {
      "name": "Desktop Commander MCP Server",
      "description": "Desktop automation and system control",
      "install_command": {
        "npm": "npx -y @wonderwhy-er/desktop-commander",
        "type": "npx"
      },
      "config_template": {
        "command": "npx",
        "args": ["@wonderwhy-er/desktop-commander"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "automation",
      "official": false
    },
    "cloud-run": {
      "name": "Google Cloud Run MCP Server",
      "description": "Google Cloud Run deployment and management",
      "install_command": {
        "npm": "npx https://github.com/GoogleCloudPlatform/cloud-run-mcp",
        "type": "npx"
      },
      "config_template": {
        "command": "npx",
        "args": ["https://github.com/GoogleCloudPlatform/cloud-run-mcp"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "cloud",
      "official": false,
      "requires_api_key": true,
      "api_key_config": {
        "env_vars": [
          {
            "name": "GOOGLE_CLOUD_PROJECT",
            "description": "Google Cloud Project ID",
            "required": true,
            "setup_url": "https://console.cloud.google.com"
          },
          {
            "name": "GOOGLE_APPLICATION_CREDENTIALS",
            "description": "Path to Google Cloud service account key JSON file",
            "required": true,
            "setup_url": "https://console.cloud.google.com/iam-admin/serviceaccounts"
          }
        ],
        "instructions": "Create a Google Cloud project and service account. Download the JSON key file and set GOOGLE_APPLICATION_CREDENTIALS to its path."
      }
    },
    "supabase": {
      "name": "Supabase MCP Server",
      "description": "Supabase database and backend services",
      "install_command": {
        "npm": "npx -y @supabase/mcp-server-supabase@latest",
        "type": "npx"
      },
      "config_template": {
        "command": "npx",
        "args": ["@supabase/mcp-server-supabase@latest"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "database",
      "official": false,
      "requires_api_key": true,
      "api_key_config": {
        "env_vars": [
          {
            "name": "SUPABASE_URL",
            "description": "Your Supabase project URL",
            "required": true,
            "setup_url": "https://app.supabase.com"
          },
          {
            "name": "SUPABASE_ANON_KEY",
            "description": "Your Supabase project anon/public key",
            "required": true,
            "setup_url": "https://app.supabase.com"
          }
        ],
        "instructions": "Go to your Supabase project dashboard → Settings → API. Copy the Project URL and anon/public key."
      }
    },
    "runpod": {
      "name": "RunPod MCP Server",
      "description": "Manage RunPod GPU cloud infrastructure - pods, endpoints, templates, and volumes",
      "install_command": {
        "type": "custom",
        "instructions": "This server requires local installation. Clone from GitHub and build locally."
      },
      "config_template": {
        "command": "node",
        "args": ["{{RUNPOD_MCP_PATH}}/build/index.js"]
      },
      "supported_platforms": ["windows", "macos", "linux"],
      "supported_apps": ["claude-code", "claude-desktop"],
      "category": "cloud",
      "official": false,
      "requires_api_key": true,
      "requires_local_build": true,
      "github_repo": "https://github.com/runpod/runpod-mcp-ts",
      "local_install_steps": [
        "git clone https://github.com/runpod/runpod-mcp-ts.git",
        "cd runpod-mcp-ts",
        "npm install",
        "npm run build"
      ],
      "api_key_config": {
        "env_vars": [
          {
            "name": "RUNPOD_API_KEY",
            "description": "Your RunPod API key for accessing RunPod services",
            "required": true,
            "setup_url": "https://www.runpod.io/console/user/settings"
          }
        ],
        "instructions": "Get your API key from RunPod Console → User Settings → API Keys. Create a new key if needed."
      }
    }
  }
}